[
    {
        "question": "1. What is Python?",
        "answer": "Python is a high-level and object-oriented programming language with unified semantics designed primarily for developing apps and the web. It is the core language in the field of Rapid Application Development (RAD) as it offers options such as dynamic binding and dynamic typing."
    },
    {
        "question": "2. What are the benefits of Python?",
        "answer": "The benefits of Python are as follows:"
    },
    {
        "question": "3. What are the key features of Python?",
        "answer": "The following are the significant features of Python, and they are:"
    },
    {
        "question": "4. What type of language is Python? Programming or Scripting?",
        "answer": "Python is suitable for scripting, but in general, it is considered a general-purpose programming language."
    },
    {
        "question": "5. What are the applications of Python?",
        "answer": "The applications of Python are as follows:"
    },
    {
        "question": "6. What is the difference between list and tuple in Python?",
        "answer": "The difference between tuple and list is as follows:"
    },
    {
        "question": "7. What are the global and local variables in Python?",
        "answer": "Global Variables in Python: The variables that are declared outside the function are called global variables. These variables can be accessed or invoked by any function in the program."
    },
    {
        "question": "8. Define PYTHON PATH?",
        "answer": "PYTHONPATH is an environmental variable that is used when we import a module. Suppose at any time we import a module, PYTHONPATH is used to check the presence of the modules that are imported in different directories. Loading of the module will be determined by interpreters."
    },
    {
        "question": "9. What are the two major loop statements?",
        "answer": "for and while"
    },
    {
        "question": "10. What do you understand by the term PEP 8?",
        "answer": "PEP 8 is the Python latest coding convention and it is abbreviated as Python Enhancement Proposal. It is all about how to format your Python code for maximum readability."
    },
    {
        "question": "11. How memory management is done in Python?",
        "answer": "The major difference between Java and Python are as follows:"
    },
    {
        "question": "12. Java vs Python",
        "answer": "The major difference between Java and Python are as follows:"
    },
    {
        "question": "",
        "answer": ""
    },
    {
        "question": "",
        "answer": ""
    },
    {
        "question": "",
        "answer": ""
    },
    {
        "question": "",
        "answer": ""
    },
    {
        "question": "",
        "answer": ""
    },
    {
        "question": "",
        "answer": ""
    },
    {
        "question": "13. Define modules in Python?",
        "answer": "The module is defined as a file that includes a set of various functions and Python statements that we want to add to our application."
    },
    {
        "question": "14. What are the built-in types available in Python?",
        "answer": "The built-in types in Python are as follows:"
    },
    {
        "question": "15. What are Python Decorators?",
        "answer": "Decorator is the most useful tool in Python as it allows programmers to alter the changes in the behavior of class or function."
    },
    {
        "question": "16. How do we find bugs and statistical problems in Python?",
        "answer": "We can detect bugs in python source code using a static analysis tool named PyChecker. Moreover, there is another tool called PyLint that checks whether the Python modules meet their coding standards or not."
    },
    {
        "question": "17. What is the difference between .py and .pyc files?",
        "answer": "py files are Python source files. .pyc files are the compiled bytecode files that are generated by the Python compiler"
    },
    {
        "question": "18. How do you invoke the Python interpreter for interactive use?",
        "answer": "By using python or pythonx. y we can invoke a Python interpreter. where x.y is the version of the Python interpreter."
    },
    {
        "question": "19. Define String in Python?",
        "answer": "String in Python is formed using a sequence of characters. Value once assigned to a string cannot be modified because they are immutable objects. String literals in Python can be declared using double quotes or single quotes."
    },
    {
        "question": "20. What do you understand by the term namespace in Python?",
        "answer": "A namespace in Python can be defined as a system that is designed to provide a unique name for every object in python. Types of namespaces that are present in Python are:"
    },
    {
        "question": "21. How do you create a Python function?",
        "answer": "Functions are defined using the def statement."
    },
    {
        "question": "22. Define iterators in Python?",
        "answer": "In Python, an iterator can be defined as an object that can be iterated or traversed upon. In another way, it is mainly used to iterate a group of containers, elements, the same as a list."
    },
    {
        "question": "23. How does a function return values?",
        "answer": "Functions return values using the return statement."
    },
    {
        "question": "24. Define slicing in Python?",
        "answer": "Slicing is a procedure used to select a particular range of items from sequence types such as Strings, lists, and so on."
    },
    {
        "question": "25. How can Python be an interpreted language?",
        "answer": "As in Python the code which we write is not machine-level code before runtime so, this is the reason why Python is called an interpreted language."
    },
    {
        "question": "26. What happens when a function doesn\u2019t have a return statement? Is this valid?",
        "answer": "Yes, this is valid. The function will then return a None object. The end of a function is defined by the block of code that is executed (i.e., the indenting) not by any explicit keyword."
    },
    {
        "question": "27. Define package in Python?",
        "answer": "In Python packages are defined as the collection of different modules."
    },
    {
        "question": "28. How can we make a Python script executable on Unix?",
        "answer": "In order to make a Python script executable on Unix, we need to perform two things. They are:"
    },
    {
        "question": "29. Which command is used to delete files in Python?",
        "answer": "OS.unlink(filename) or OS.remove(filename) are the commands used to delete files in Python Programming."
    },
    {
        "question": "30. Define pickling and unpickling in Python?",
        "answer": "Pickling in Python: The process in which the pickle module accepts various Python objects and converts them into a string representation and dumps the file accordingly using the dump function is called pickling."
    },
    {
        "question": "",
        "answer": "Local namespaces are created within a function when that function is called. Global namespaces are created when the program starts."
    },
    {
        "question": "31. Explain the difference between local and global namespaces?",
        "answer": "Local namespaces are created within a function when that function is called. Global namespaces are created when the program starts."
    },
    {
        "question": "32. What is a boolean in Python?",
        "answer": "Boolean is one of the built-in data types in Python, it mainly contains two values, and they are true and false."
    },
    {
        "question": "33. What are Python String formats and Python String replacements?",
        "answer": "Python String Format: The String format() method in Python is mainly used to format the given string into an accurate output or result."
    },
    {
        "question": "34. Name some of the built-in modules in Python?",
        "answer": "The built-in modules in Python are:"
    },
    {
        "question": "35. What are the functions in Python?",
        "answer": "In Python, functions are defined as a block of code that is executable only when it is called. The def keyword is used to define a function in Python."
    },
    {
        "question": "36. What are Dict and List comprehensions in Python?",
        "answer": "These are mostly used as syntax constructions to ease the creation of lists and dictionaries based on existing iterable."
    },
    {
        "question": "37. Define the term lambda?",
        "answer": "Lambda is the small anonymous function in Python that is often used as an inline function."
    },
    {
        "question": "38. When would you use triple quotes as a delimiter?",
        "answer": "Triple quotes \u2018\u2019\u201d or \u2018\u201c are string delimiters that can span multiple lines in Python. Triple quotes are usually used when spanning multiple lines, or enclosing a string that has a mix of single and double quotes contained therein."
    },
    {
        "question": "39. Define self in Python?",
        "answer": "In Python self is defined as an object or an instance of a class. This self is explicitly considered as the first parameter in Python. Moreover, we can also access all the methods and attributes of the classes in Python programming using self keyword."
    },
    {
        "question": "40. What is _init_?",
        "answer": "The _init_ is a special type of method in Python that is called automatically when the memory is allocated for a new object. The main role of _init_ is to initialize the values of instance members for objects."
    },
    {
        "question": "41. Define generators in Python?",
        "answer": "The way of implementing an effective representation of iterators is known as generators. It is only the normal function that yields expression in the function."
    },
    {
        "question": "42. Define docstring in Python?",
        "answer": "The docstring in Python is also called a documentation string, it provides a way to document the Python classes, functions, and modules."
    },
    {
        "question": "43. How do we convert the string to lowercase?",
        "answer": "the lower() function is used to convert string to lowercase."
    },
    {
        "question": "44. How to remove values from a Python array?",
        "answer": "Ans: The elements can be removed from a Python array using the remove() or pop() function. The difference between pop() and remove() will be explained in the below example."
    },
    {
        "question": "45. What is Try Block?",
        "answer": "A block that is preceded by the try keyword is known as a try block"
    },
    {
        "question": "46. Why do we use the split method in Python?",
        "answer": "split() method in Python is mainly used to separate a given string."
    },
    {
        "question": "47. How can we access a module written in Python from C?",
        "answer": "We can access the module written in Python from C by using the following method."
    },
    {
        "question": "48. How do you copy an object in Python?",
        "answer": "To copy objects in Python we can use methods called copy.copy() or copy.deepcopy()."
    },
    {
        "question": "49. How do we reverse a list in Python?",
        "answer": "By using the list.reverse(): we can reverse the objects of the list in Python."
    },
    {
        "question": "50. How can we debug a Python program?",
        "answer": "By using the following command we can debug the Python program"
    },
    {
        "question": "51. Write a program to count the number of capital letters in a file?",
        "answer": "Output:"
    },
    {
        "question": "52. Write a program to display the Fibonacci sequence in Python?",
        "answer": "Output:"
    },
    {
        "question": "53. Write a program in Python to produce a Star triangle?",
        "answer": "The code to produce a star triangle is as follows:"
    },
    {
        "question": "54. Write a program to check whether the given number is prime or not?",
        "answer": "The code to check prime number is as follows:"
    },
    {
        "question": "55. Write Python code to check the given sequence is a palindrome or not?",
        "answer": "Output:"
    },
    {
        "question": "56. Write Python code to sort a numerical dataset?",
        "answer": "The code to sort a numerical dataset is as follows:"
    },
    {
        "question": "57. What is the output of the following code?",
        "answer": "The output of the following code is"
    },
    {
        "question": "58. What is the procedure to install Python on Windows and set path variables?",
        "answer": "We need to implement the following steps to install Python on Windows, and they are:"
    },
    {
        "question": "59. Differentiate between SciPy and NumPy?",
        "answer": "The difference between SciPy and NumPy is as follows:"
    },
    {
        "question": "",
        "answer": "The difference between Python array and Python list is as follows:"
    },
    {
        "question": "",
        "answer": "The difference between Python array and Python list is as follows:"
    },
    {
        "question": "",
        "answer": "The difference between Python array and Python list is as follows:"
    },
    {
        "question": "60. How do Python arrays and lists differ from each other?",
        "answer": "The difference between Python array and Python list is as follows:"
    },
    {
        "question": "",
        "answer": ""
    },
    {
        "question": "61. Can we make multi-line comments in Python?",
        "answer": "In python, there is no specific syntax to display multi-line comments like other languages. In order to display multi-line comments in Python, programmers use triple-quoted (docstrings) strings. If the docstring is not used as the first statement in the present method, it will not be considered by the Python parser."
    },
    {
        "question": "62. What is the difference between range and xrange?",
        "answer": "Both the methods are mainly used in Python to iterate the for loop for a fixed number of times. They differ only when we talk regarding Python versions."
    },
    {
        "question": "63. What is Django?",
        "answer": "Django is an advanced python web framework that supports agile growth and clean pragmatic design, built through experienced developers, this cares much about the trouble of web development, so you can concentrate on writing your app without wanting to reinvent that wheel."
    },
    {
        "question": "64. List the features of Django?",
        "answer": "Django is a high-level Python web framework that was developed for realistic design, clean, rapid development."
    },
    {
        "question": "65. Which level framework does Django belong to?",
        "answer": "Django is a high-level Python web framework that was developed for realistic design, clean, rapid development."
    },
    {
        "question": "66. What are the advantages of Django?",
        "answer": "The main goal to designing Django is to make it simple to its users, to do this Django uses:"
    },
    {
        "question": "67. Why should we use the Django framework?",
        "answer": "The main goal to designing Django is to make it simple to its users, to do this Django uses:"
    },
    {
        "question": "68. List the common security issues that can be avoided by using Django?",
        "answer": "A few common security issues that can be avoided by using Django are:"
    },
    {
        "question": "69. List a few of the famous companies that are using Django?",
        "answer": "Few well-known companies that are using the Django framework are"
    },
    {
        "question": "70. What can we do with the Django framework?",
        "answer": "Here is an exciting reality: Django has first created to power a web application as a newspaper publisher, the Lawrence Journal-World. You all can demand it to be very good about handling projects by volumes from the text files, media, including extremely high traffic, or else something that operates as a web publication."
    },
    {
        "question": "71. List steps for setting up static files in Django?",
        "answer": "Ans: There are only three main steps for setting up Django static files"
    },
    {
        "question": "72. Is Django stable?",
        "answer": "Yes, Django is used by many famous companies because it is quite stable."
    },
    {
        "question": "73. Differentiate Django reusability code with other frameworks?",
        "answer": "Django web framework is operated and also maintained by an autonomous and non-profit organization designated as Django Software Foundation (DSF). The initial foundation goal is to promote, support, and advance this Django Web framework."
    },
    {
        "question": "74. How can we handle URLs in Django?",
        "answer": "A session comprises a mechanism to store information on a specific server-side at the interaction by the web application. By default, session reserves in the database and allows file-based and cache-based sessions."
    },
    {
        "question": "75. List the mandatory files of the Django project?",
        "answer": "A session comprises a mechanism to store information on a specific server-side at the interaction by the web application. By default, session reserves in the database and allows file-based and cache-based sessions."
    },
    {
        "question": "76. Explain the Django session?",
        "answer": "A session comprises a mechanism to store information on a specific server-side at the interaction by the web application. By default, session reserves in the database and allows file-based and cache-based sessions."
    },
    {
        "question": "77. Why do we use a cookie in Django?",
        "answer": "A cookie is a piece of information that is stored in a client's browser for a specific time. When the specific time is completed cookie gets automatically removed from the client browser."
    },
    {
        "question": "78. Mentions the methods used for setting and getting cookie values?",
        "answer": "The two methods to set and get cookie values are"
    },
    {
        "question": "79. What is the use of Django-admin.py?",
        "answer": "Django-admin.py is a command-line argument that is utilized for administrative tasks"
    },
    {
        "question": "80. What is the use of manage.py?",
        "answer": "It is an automatically built file inside each Django project. It is a flat wrapper encompassing the Django-admin.py. It possesses the following usage:"
    },
    {
        "question": "81. Why is Django loosely packed?",
        "answer": "Django has described as a loosely coupled framework because of the MTV architecture it\u2019s based upon. Django\u2019s architecture means a variant of MVC architecture and also MTV is helpful because this completely separates the server code of the client\u2019s machine."
    },
    {
        "question": "82. List the ways we add view functions to urls.py?",
        "answer": "we can make use of the edit mysite/setting.py command, which is a simple Python module that consists of levels for presenting or displaying Django settings."
    },
    {
        "question": "83. Explain how can we build or set up the database in Django?",
        "answer": "we can make use of the edit mysite/setting.py command, which is a simple Python module that consists of levels for presenting or displaying Django settings."
    },
    {
        "question": "84. List out the inheritance styles in Django?",
        "answer": "There are three possible inheritance styles in Django, and they are:"
    },
    {
        "question": "85. How to save an image locally using Python in which we already know the URL address?",
        "answer": "The following code is used to save the image locally from the URL address which we know."
    },
    {
        "question": "86. How can we access sessions in flask?",
        "answer": "A session will basically allow us to remember information from one request to another. In a flask, a signed cookie is used to make the user look at the session contents and modify them. Moreover, the user can change the session only when the secret key named Flask.secret_key is present."
    },
    {
        "question": "87. Is flask an MVC model? If yes, justify your answer by showing an example of your application with the help of the MVC pattern?",
        "answer": "Basically, a flask is a minimalistic framework that behaves the same as the MVC framework. So MVC will be perfectly suitable for the flask and we will consider the MVC pattern in the below example."
    },
    {
        "question": "88. What are the database connections in Python Flask, explain?",
        "answer": "Database-powered applications are supported by the flask. The relational database systems need to create a schema that requires piping the schema.sql file into an SQLite3 command. So, in this case, you need to install the SQLite3 command on your system to initiate and create the database in the flask."
    },
    {
        "question": "89. Explain the procedure to minimize or lower the outages of the Memcached server in your Python development?",
        "answer": "The following are the steps used to minimize the outages of the Memcached server in your Python development, and they are."
    },
    {
        "question": "90. What is the Dogpile effect?",
        "answer": "This is defined as an occurrence of an event when the cache expires and also when the websites are hit with more requests by the client at a time. This dogpile effect can be averted by the use of a semaphore lock. If in the particular system the value expires then, first of all, the particular process receives the lock and begins generating new value."
    },
    {
        "question": "91. What are the OOP's concepts available in Python?",
        "answer": "Ans: Python is also an object-oriented programming language like other programming languages. It also contains different OOP's concepts, and they are"
    },
    {
        "question": "92. Define object in Python?",
        "answer": "An object in Python is defined as an instance that has both state and behavior. Everything in Python is made of objects."
    },
    {
        "question": "93. What is a class in Python?",
        "answer": "Class is defined as a logical entity that is a huge collection of objects and it also contains both methods and attributes."
    },
    {
        "question": "94. How to create a class in Python?",
        "answer": "In Python programming, the class is created using a class keyword. The syntax for creating a class is as follows:"
    },
    {
        "question": "95. What is the syntax for creating an instance of a class in Python?",
        "answer": "Ans: The syntax for creating an instance of a class is as follows:"
    },
    {
        "question": "96. Define what is \u201cMethod\u201d in Python programming?",
        "answer": "The Method is defined as the function associated with a particular object. The method which we define should not be unique as a class instance. Any type of object can have methods."
    },
    {
        "question": "97. Does multiple inheritances are supported in Python?",
        "answer": "Multiple inheritances are supported in python. It is a process that provides flexibility to inherit multiple base classes in a child class."
    },
    {
        "question": "98. What is data abstraction in Python?",
        "answer": "In simple words, abstraction can be defined as hiding unnecessary data and showing or executing necessary data. In technical terms, abstraction can be defined as hiding internal processes and showing only the functionality. In Python abstraction can be achieved using encapsulation."
    },
    {
        "question": "99. Define encapsulation in Python?",
        "answer": "Encapsulation is one of the most important aspects of object-oriented programming. The binding or wrapping of code and data together into a single cell is called encapsulation. Encapsulation in Python is mainly used to restrict access to methods and variables."
    },
    {
        "question": "100. What is polymorphism in Python?",
        "answer": "By using polymorphism in Python we will understand how to perform a single task in different ways. For example, designing a shape is the task and various possible ways in shapes are a triangle, rectangle, circle, and so on."
    },
    {
        "question": "101. Does Python make use of access specifiers?",
        "answer": "Python does not make use of access specifiers and also it does not provide a way to access an instance variable. Python introduced a concept of prefixing the name of the method, function, or variable by using a double or single underscore to act like the behavior of private and protected access specifiers."
    },
    {
        "question": "102. How can we create an empty class in Python?",
        "answer": "Empty class in Python is defined as a class that does not contain any code defined within the block. It can be created using pass keywords and object to this class can be created outside the class itself."
    },
    {
        "question": "103. Define Constructor in Python?",
        "answer": "Constructor is a special type of method with a block of code to initialize the state of instance members of the class. A constructor is called only when the instance of the object is created. It is also used to verify that they are sufficient resources for objects to perform a specific task."
    },
    {
        "question": "104. How can we create a constructor in Python programming?",
        "answer": "The _init_ method in Python stimulates the constructor of the class. Creating a constructor in Python can be explained clearly in the below example."
    },
    {
        "question": "105. Define Inheritance in Python?",
        "answer": "When an object of child class has the ability to acquire the properties of a parent class then it is called inheritance. It is mainly used to acquire runtime polymorphism and also it provides code reusability."
    },
    {
        "question": "1. What is the best Python IDE for beginners?",
        "answer": "There are many IDE\u2019s to execute Python code. But, as a beginner, the following two IDE\u2019s will be helpful"
    },
    {
        "question": "2. What are the cool things you can do with Python?",
        "answer": "The following are some of the things that you can perform using Python:"
    },
    {
        "question": "3. Does Python replace Java?",
        "answer": "Python alone can't replace Java, whereas a group of programming languages can replace Java but JVM can't be replaced."
    },
    {
        "question": "4. How do I prepare for a Python interview?",
        "answer": "There is no doubt, Python is the best choice for coding in the interview. Other than Python,\u00a0 if you prefer to choose C++ or java you need to worry about structure and syntax."
    },
    {
        "question": "5. Why should you choose Python?",
        "answer": "There is no doubt, Python is the best choice for coding in the interview. Other than Python,\u00a0 if you prefer to choose C++ or java you need to worry about structure and syntax."
    },
    {
        "question": "6. Can we use Python for coding in interviews?",
        "answer": "Choosing an appropriate language to code also matters at the time of the interview. Any language can be used for coding but coding in Python is seeming less and easy."
    },
    {
        "question": "7. How to crack a coding interview?",
        "answer": "It is not that easy as we usually think. Mugging up some programs and executing the same will not work. The ideal way to crack the coding interview, you should be proficient in writing code without the support of any IDE. Don't panic or argue, test your code before you submit, wait for their feedback. Practicing mock interviews will help. Coderbyte platform will help you in enhancing your skills."
    },
    {
        "question": "8. Top 5 tips to crack the interview?",
        "answer": "The following are the top 5 tips to crack Python interview:"
    },
    {
        "question": "9. How can I practice code?",
        "answer": "There are many online coding sites and platforms exclusively for practice purposes. According to my the Ideal way of learning is by picking up a problem statement and working on it to build your confidence levels. On the StackOverflow website, we can see 100 software developers posting their problems."
    },
    {
        "question": "10. How to crack my first interview?",
        "answer": "Attending an interview as a fresher or first time is very challenging, but we are here to support you. Learn the fundamentals of programming, practice some available coding samples."
    }
]